<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:jaxws="http://cxf.apache.org/jaxws"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
	   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
       http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.1.xsd
       http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd">

    <!-- 启用注解 -->
    <context:annotation-config/>
    <!-- 引入框架的配置信息-jms -->
    <import resource="classpath:spring/spring-dao.xml"/>
    <!--import dubbo config-->
    <import resource="classpath:spring/dubbo-provider-shop.xml"/>
    <!-- 扫描包 -->
    <context:component-scan base-package="com.fish.shop"/>

    <!--开启代理 -->
    <aop:aspectj-autoproxy proxy-target-class="true" expose-proxy="true"/>

    <!--开启基于注解的事务-->
    <tx:annotation-driven proxy-target-class="true" transaction-manager="frameworkTransactionManager" />

    <bean id="frameworkTransactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <tx:annotation-driven mode="aspectj" />
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <bean class="org.springframework.transaction.aspectj.AnnotationTransactionAspect"
        factory-method="aspectOf">
        <property name="transactionManager" ref="transactionManager" />
    </bean>

<!--    &lt;!&ndash; 引入TCC事务  &ndash;&gt;
    <import resource="classpath:tcc-transaction-dubbo.xml" />
    <import resource="classpath:tcc-transaction.xml" />

    <bean id="transactionRepository" class="org.mengyun.tcctransaction.repository.RedisClusterTransactionRepository">
        <property name="keyPrefix" value="TCC:loan:"/>
        <property name="jedisClusterExtend" ref="jedisClusterExtend"/>
    </bean>


    <bean id="jedisClusterExtend" class="org.mengyun.tcctransaction.repository.helper.JedisClusterExtend">
        <constructor-arg index="0" value="${redis.cluster.ip}" type="java.lang.String"/>
        <constructor-arg index="1" ref="jedisPoolConfig"/>
    </bean>


    &lt;!&ndash; 配置JedisPoolConfig实例 &ndash;&gt;
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.pool.maxIdle}" />
        <property name="maxTotal" value="${redis.pool.maxActive}" />
        <property name="maxWaitMillis" value="${redis.pool.maxWait}" />
        <property name="testOnBorrow" value="false" />
    </bean>-->
</beans>